(deflisten workspace "scripts/desktop")
(defwidget desktops []
  (literal
    :class "workspaces"
    :content
    workspace
  )
)

(defwidget shortcuts []
  (box
    :class "shortcuts"
    :orientation "h"
    :halign "left"
    "|"
    (button :class "shortcutsButton"
      :onclick "scripts/shortcut/terminal"
      ""
    ) ;;terminal
    (button :class "shortcutsButton"
      :onclick "scripts/shortcut/fileManager"
      ""
    ) ;;folder manager
    (button :class "shortcutsButton"
      :onclick "scripts/shortcut/firefox"
      ""
    ) ;;firefox
    (button :class "shortcutsButton"
      :onclick "scripts/shortcut/discord"
      ""
    ) ;;discord
    (button :class "shortcutsButton"
      :onclick "scripts/shortcut/spotify"
      ""
    ) ;;spotify / spotifytui
    (button :class "shortcutsButton"
      :onclick "scripts/shortcut/vscode"
      ""
    ) ;;vscode
    (button :class "shortcutsButton"
      :onclick "scripts/shortcut/steam"
      ""
    ) ;;steam maybe
  )
)

(defpoll date :interval "60s" "date '+%d %b | %H:%M'")
(defwidget date []
  (box
    :orientation "h"
    :space-evenly false
    :halign "center"
    date
  )
)

(defpoll cpuUse :interval "5s" "scripts/cpu")
(defwidget sysinfo []
  (label :class "cpu" :text {"CPU" + " : " + cpuUse}
  )
)

(defwidget powerButtons []
  (box
    :class "powerbuttons"
    :space-evenly false
    (button :class "shutdown"
      :onclick "shutdown -h now"
      "   "
    )
    (button :class "logout"
      :onclick "bspc quit"
      "    "
    )
    (button :class "reboot"
      :onclick "reboot"
      "   "
    )
  )
)

(defwidget leftContent []
  (box
    :orientation "h"
    :space-evenly false
    :halign "start"
    (desktops)
    (shortcuts)
  )
)
(defwidget centerContent []
  (box
    :orientation "h"
    :space-evenly false
    :halign "center"
    (date)
  )
)
(defwidget rightContent []
  (box
    :orientation "h"
    :space-evenly false
    :halign "end"
    (sysinfo)
    (powerButtons)
  )
)

(defwidget barContent []
  (centerbox
    :orientation "h"
    (leftContent)
    (centerContent)
    (rightContent)
  )
)

(defwindow bar
  :monitor 0
  :geometry
  (geometry :x "0%"
    :y "8px"
    :width "99%"
    :height "30px"
    :anchor "top center"
  )
  :stacking "fg"
  :reserve (struts :distance "40px" :side "top")
  :windowtype "dock"
  :wm-ignore false
  (barContent)
)