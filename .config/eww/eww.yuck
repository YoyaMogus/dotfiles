;; ---------------- VAR ---------------- ;;



(deflisten music      "gross music")
(deflisten nvidia-gpu "nvidia-smi --query-gpu=utilization.gpu --format=csv,noheader,nounits --loop=1")
(deflisten	br	      "brightnessctl g -m")
(deflisten	vl        "pactl get-sink-volume @DEFAULT_SINK@ | awk 'NR==1{print $5}' | rev | cut -c2- | rev")





;; ---------------- WIN ---------------- ;;



(defwindow menu
  :monitor 0
  :geometry (geometry :x "0px"  :y "0px"  :width "0px"  :height "0px" :anchor "center")
  :stacking "bg"
  :wm-ignore true
  :windowtype "desktop"
  (content)
)

(defwidget content []
  (box
    :class "content"
    :orientation "v"
    :space-evenly "false"
    (top-content)
    (bottom-content)
  )
)

(defwidget top-content []
  (box
    :class "top-content"
    :orientation "h"
    :space-evenly true
    (user)
    (clock)
  )
)

(defwidget bottom-content []
  (box
    :class "bottom-content"
    :orientation "v"
    :space-evenly false
    (bottom-top-content)
    (bottom-bot-content)
  )
)

(defwidget bottom-top-content []
  (box
    :class "bottom-top-content"
    :orientation "h"
    :space-evenly true
    (music-player)
    (module-calendar)
  )
)

(defwidget bottom-bot-content []
  (box
    :class "bottom-bot-content"
    :orientation "h"
    :space-evenly true
    (fetch)
    (module-buttons)
  )
)



;; ---------------- WID ---------------- ;;



(defwidget user []
  (box
    :class "user"
	:orientation "h"
	:halign "start"
	:space-evenly false
    (box
	  :class "user-picture"
	  :style "background-image: url(\"img/pdp.png\");"
	)
    (label
      :class "user-separator"
      :text "|"
    )
    (label
      :class "user-name"
      :text "yosyo@seekers"
    )
  )
)

(defwidget clock []
  (box
    :class "clock"
    :orientation "h"
    :halign "end"
    :space-evenly false
    (label
      :class "clock"
	  :text {formattime(EWW_TIME, "%H : %M")}
    )
  )
)

(defwidget music-player[]
  (box
    :class "music-player"
    :orientation "h"
    :space-evenly true
    (box :orientation "v" :valign "center" :space-evenly false (box :orientation "h" :halign "center" :space-evenly false (box
      :class "music-picture"
      :style "background-image: url(\"${music.cover}\");"
    )))
    (box
      :class "music-info"
      :orientation "v"
      :valign "center"
      :space-evenly false
      (label  :class "music-title"  :limit-width 12 :text {music.title})
      (label  :class "music-artist" :limit-width 12 :text {music.artist})
      (box
	    (button	:class "music-button"	:onclick "playerctl -p spotify previous"	"")
	    (button	:class "music-button"	:onclick "playerctl -p spotify play-pause"	{music.status != "Playing" ? "󰐊" : "󰏤"})
	    (button	:class "music-button"	:onclick "playerctl -p spotify next"	"")
      )
    )
  )
)

(defwidget module-calendar []
  (box
    :class "calendar-box"
    :orientation "v"
    :valign "center"
    :space-evenly false
    (box :orientation "h" :halign "start" :space-evenly false (label  :class "calendar-label" :text {formattime(EWW_TIME, "%A %d %B")}))
    (calendar
      :class "calendar"
      :show-details false
      :show-heading false
    )
  )
)

(defwidget fetch[]
  (box
    :class "fetch"
    :orientation "v"
    :valign "center"
    :space-evenly false
    (box
      :class "seekrs"
      :orientation "h"
      :halign "center"
      :space-evenly false
      (box
        :class "seekrs-picture"
        :style "background-image: url(\"img/seekrs.svg\");"
      )
      (label  :class "seekrs-text"  :text "fuck around and find out")
    )
    (box
      :class "stats"
      :orientation "h"
      :space-evenly true
      (circular-progress
        :class "stats-gpu"
        :thickness "5"
        :start-at "75" 
        :clockwise true
        :value {nvidia-gpu}
        (label  :class "stats-gpu-label" :text "󰢮")
      )
      (circular-progress
        :class "stats-cpu"
        :thickness "5"
        :start-at "75"
        :clockwise true
        :value {EWW_CPU.avg}
        (label  :class "stats-cpu-label" :text "󰍛")
      )
      (circular-progress
        :class "stats-ram"
        :thickness "5"
        :start-at "75"
        :clockwise true
        :value {EWW_RAM.used_mem_perc}
        (label  :class "stats-ram-label" :text "")
      )
      (circular-progress
        :class "stats-disk"
        :thickness "5"
        :start-at "75"
        :clockwise true
        :value {EWW_DISK["/"].used_perc}
        (label  :class "stats-disk-label" :text "󰋊")
      )
    )
  )
)

(defwidget module-buttons []
  (box
    :class "module-box"
    :orientation "h"
    :halign "center"
    :space-evenly false
    (box
      :class "module-sliders-box"
      :orientation "v"
      :valign "center"
      :space-evenly true
      (box
        :class "module-sliders"
        :orientation "v"
        :space-evenly true
        (scale
  	      :class "module-br"
  		  :value {br}
          :min "0"
		  :max "255"
		  :onchange "brightnessctl set {}"
		  :orientation "h"
        )
      )
      (box
      :class "module-sliders"
      :orientation "v"
      :valign "center"
      :space-evenly true
        (scale
		  :class "module-vl"
		  :value {vl}
          :min "0"
		  :max "100"
		  :onchange "pactl set-sink-volume @DEFAULT_SINK@ {}%"
	      :orientation "h"
          ""
	    )
      )
	)
    (box
      :class "module-buttons-box"
      :orientation "v"
      :valign "center"
      :space-evenly true
      (box
        :orientation "h"
        :halign "center"
        :space-evenly true
        (button :class "module-buttons shutdown" :onclick "echo 'shutdown'"  "")
        (button :class "module-buttons sleep" :onclick "echo 'sleep'"  "")
      )
      (box
        :orientation "h"
        :halign "center"
        :space-evenly true
        (button :class "module-buttons reboot" :onclick "echo 'reboot'"  "")
        (button :class "module-buttons quit" :onclick "echo 'quit'"  "󰗼")
      )
    )
  )
)
